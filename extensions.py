import os
from telebot import types
from config import IMAGE_FOLDER
import random


def get_questions():
    questions = [
        {
            "question": "–ö–∞–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?",
            "answers": {
                "–ê–∫—Ç–∏–≤–Ω–æ, –∑–∞–Ω–∏–º–∞—è—Å—å —Å–ø–æ—Ä—Ç–æ–º –∏–ª–∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤—É—è.": "–ê–º—É—Ä—Å–∫–∏–π —Ç–∏–≥—Ä",
                "–°–ø–æ–∫–æ–π–Ω–æ, —á–∏—Ç–∞—è –∫–Ω–∏–≥—É –∏–ª–∏ —Å–º–æ—Ç—Ä—è —Ñ–∏–ª—å–º.": "–î–∏–∫–¥–∏–∫",
                "–ù–∞ –ø—Ä–∏—Ä–æ–¥–µ, –≥—É–ª—è—è –≤ –ª–µ—Å—É –∏–ª–∏ –ø–∞—Ä–∫–µ.": "–ö–∞–ø–∏–±–∞—Ä–∞",
                "–í –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π, –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–æ–¥—è –≤—Ä–µ–º—è.": "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –°–æ–Ω—è",
                "–í—Å—ë –≤—Ä–µ–º—è –¥–µ–ª–∞—è —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ.": "–ë–æ–±—Ä"
            },
        },
        {
            "question": "–ö–∞–∫–æ–π –∫–ª–∏–º–∞—Ç –≤–∞–º –±–æ–ª—å—à–µ –ø–æ –¥—É—à–µ?",
            "answers": {
                "–•–æ–ª–æ–¥–Ω—ã–π –∏ —Å–Ω–µ–∂–Ω—ã–π.": "–ê–º—É—Ä—Å–∫–∏–π —Ç–∏–≥—Ä",
                "–¢–µ–ø–ª—ã–π –∏ —Å–æ–ª–Ω–µ—á–Ω—ã–π.": "–ö–∞–ø–∏–±–∞—Ä–∞",
                "–í–ª–∞–∂–Ω—ã–π –∏ –ø—Ä–æ—Ö–ª–∞–¥–Ω—ã–π.": "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –°–æ–Ω—è",
                "–ó–∞—Å—É—à–ª–∏–≤—ã–π –∏ –∂–∞—Ä–∫–∏–π.": "–î–∏–∫–¥–∏–∫",
                "–°–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –ª—é–±–æ–π, –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–¥–æ–µ–º—ã.": "–ë–æ–±—Ä"
            },
        },
        {
            "question": "–ö–∞–∫ –±—ã –≤—ã –æ–ø–∏—Å–∞–ª–∏ —Å–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä?",
            "answers": {
                "–°–º–µ–ª—ã–π, —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π, —è –≤—Å–µ–≥–¥–∞ –¥–æ–±–∏–≤–∞—é—Å—å —Å–≤–æ–µ–≥–æ.": "–ê–º—É—Ä—Å–∫–∏–π —Ç–∏–≥—Ä",
                "–¢–∏—Ö–∏–π –∏ –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–π, –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –±—ã—Ç—å –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ.": "–î–∏–∫–¥–∏–∫",
                "–°–ø–æ–∫–æ–π–Ω—ã–π –∏ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π, –ª—é–±–ª—é –º–∏—Ä –∏ –ø—Ä–∏—Ä–æ–¥—É.": "–ö–∞–ø–∏–±–∞—Ä–∞",
                "–û–±—â–∏—Ç–µ–ª—å–Ω—ã–π –∏ –≤–µ—Å–µ–ª—ã–π, –ª—é–±–ª—é –∏–≥—Ä–∞—Ç—å –∏ —Å–º–µ—è—Ç—å—Å—è.": "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –°–æ–Ω—è",
                "–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π –∏ —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã–π, –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–∂—É —Ä–µ—à–µ–Ω–∏–µ.": "–ë–æ–±—Ä"
            },
        },
        {
            "question": "–ö–∞–∫–æ–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –≤–∞–º –±–ª–∏–∂–µ?",
            "answers": {
                "–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ.": "–ê–º—É—Ä—Å–∫–∏–π —Ç–∏–≥—Ä",
                "–Ø –∂–∏–≤—É –≤ —Å—Ç–∞–¥–µ, –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –æ–±—â–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏.": "–î–∏–∫–¥–∏–∫",
                "–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –±—ã—Ç—å –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –¥—Ä—É–∑–µ–π –∏ –ø—Ä–∏—Ä–æ–¥—ã.": "–ö–∞–ø–∏–±–∞—Ä–∞",
                "–Ø –ª—é–±–ª—é –±—ã—Ç—å –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–Ω–∏–º–∞–Ω–∏—è, –Ω–æ –Ω–µ –ø—Ä–æ—Ç–∏–≤ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –≤ —Ç–µ–Ω–∏.": "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –°–æ–Ω—è",
                "–Ø —Ç—Ä—É–¥–æ–ª—é–±–∏–≤, –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å—Ç—Ä–æ–∏—Ç—å –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å.": "–ë–æ–±—Ä"
            },
        },
        {
            "question": "–ö–∞–∫–æ–π –≤–∏–¥ –ø–∏—â–∏ –≤–∞–º –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤–∏—Ç—Å—è?",
            "answers": {
                "–Ø —Ö–∏—â–Ω–∏–∫, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –º—è—Å–æ.": "–ê–º—É—Ä—Å–∫–∏–π —Ç–∏–≥—Ä",
                "–Ø –ª—é–±–ª—é —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ, –≤ —Ç–æ–º —á–∏—Å–ª–µ —Ñ—Ä—É–∫—Ç—ã –∏ –∑–µ–ª–µ–Ω—å.": "–ö–∞–ø–∏–±–∞—Ä–∞",
                "–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —á—Ç–æ-—Ç–æ –ª—ë–≥–∫–æ–µ –∏ —Å–ª–∞–¥–∫–æ–µ.": "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –°–æ–Ω—è",
                "–Ø –ø–∏—Ç–∞—é—Å—å —Ç—Ä–∞–≤–æ–π –∏ –ª–∏—Å—Ç—å—è–º–∏, —ç—Ç–æ –º–æ—ë –æ—Å–Ω–æ–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ.": "–î–∏–∫–¥–∏–∫",
                "–ú–Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è –≤–æ–¥–Ω—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –∏ –¥—Ä–µ–≤–µ—Å–∏–Ω–∞.": "–ë–æ–±—Ä"
            },
        }
    ]

    for question in questions:
        answer_items = list(question["answers"].items())
        random.shuffle(answer_items)
        question["answers"] = dict(answer_items)

    random.shuffle(questions)

    return questions


def get_result(answers):
    if not answers:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ üò¢"

    result_count = {}
    for answer in answers:
        result_count[answer] = result_count.get(answer, 0) + 1
    return max(result_count, key=result_count.get)


def get_image_path(animal_name):
    image_path = os.path.join(IMAGE_FOLDER, f"{animal_name}.jpeg")

    if os.path.exists(image_path):
        return image_path
    return None


def create_restart_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑"))
    markup.add(types.KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º"))
    markup.add(types.KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏"))
    return markup

import telebot
from telebot import types
from config import TOKEN, GUARDIANSHIP_LINK, SUPPORT_EMAIL, SUPPORT_PHONE, BOT_SHARE_LINK
from extensions import get_questions, get_result, get_image_path, create_restart_markup
import os

bot = telebot.TeleBot(TOKEN)
questions = get_questions()
user_answers = {}


@bot.message_handler(commands=['start'])
def start_quiz(message):
    user_answers[message.chat.id] = []
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –ü—Ä–æ–π–¥–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –±—É–¥–µ—Ç —Ç–≤–æ–∏–º —Ç–æ—Ç–µ–º–æ–º. –ù–∞—á–Ω–µ–º?"
    )
    ask_question(message.chat.id, 0)


def ask_question(chat_id, index):
    if index < len(questions):
        question = questions[index]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

        for answer in question["answers"].keys():
            markup.add(types.KeyboardButton(answer))

        bot.send_message(chat_id, question["question"], reply_markup=markup)
    else:
        result = get_result(user_answers[chat_id])
        image_path = get_image_path(result)

        if image_path and os.path.exists(image_path):
            with open(image_path, 'rb') as img:
                bot.send_photo(chat_id, img)

        bot.send_message(
            chat_id,
            f"–¢–≤–æ—ë —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ ‚Äî {result}!",
            reply_markup=create_restart_markup()
        )
        bot.send_message(
            chat_id,
            f"–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ–± –æ–ø–µ–∫–µ: {GUARDIANSHIP_LINK}",
            disable_web_page_preview=True
        )


@bot.message_handler(func=lambda message: True)
def handle_answer(message):
    chat_id = message.chat.id

    if chat_id not in user_answers:
        start_quiz(message)
        return

    for question in questions:
        if message.text in question["answers"]:
            user_answers[chat_id].append(question["answers"][message.text])
            index = len(user_answers[chat_id])
            ask_question(chat_id, index)
            return

    if message.text == "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑":
        start_quiz(message)
        return

    if message.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º":
        result = get_result(user_answers.get(chat_id, []))
        bot.send_message(
            chat_id,
            f"–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º:\nüìß {SUPPORT_EMAIL}\nüìû {SUPPORT_PHONE}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}"
        )
        return

    if message.text == "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏":
        if chat_id in user_answers and user_answers[chat_id]:
            result = get_result(user_answers[chat_id])
        else:
            bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ—ë —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ!")
            return

        share_text = f"–ú–æ—ë —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ ‚Äî {result}! –£–∑–Ω–∞–π —Å–≤–æ—ë —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –≤ –±–æ—Ç–µ: {BOT_SHARE_LINK}"
        bot.send_message(chat_id, share_text)
        return


if __name__ == "__main__":
    bot.polling(none_stop=True)
